version: "3"
services:
  nginx:
    container_name: app-nginx
    hostname: develop-nginx
    image: nginx
    volumes:
      - ${NGINX_VOLUMES_LOGS}:/var/log/nginx # NGINX LOG 文件
      - ${NGINX_VOLUMES_CONFIG}:/etc/nginx/nginx.conf # NGINX 配置文件
      - ${NGINX_VOLUMES_CONFIG_D}:/etc/nginx/conf.d/ # NGINX 配置文件
      - ${PHP_VOLUMES_PROJECT}:/var/www:cached # 工作目录
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend
    depends_on:
      - php-fpm
    restart: always
  php-fpm:
    container_name: app-php
    hostname: develop-php
    build: php-fpm/php${PHP_VERSION}
    volumes:
      - ./php-fpm/php${PHP_VERSION}/php.ini-development:/usr/local/etc/php/php.ini
      - ${PHP_VOLUMES_PROJECT}:/var/www:cached
    depends_on:
      - redis
      - mysql
      - pgsql
    ports:
      - "9000:9000"
      - "8445:8445"
    networks:
      - backend
    user: www-data
    restart: always
  mysql:
    container_name: app-mysql
    hostname: develop-mysql
    image: mysql:5.7.37
    volumes:
      - ${MYSQL_VOLUMES_DATA}:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    networks:
      - backend
    restart: always
  redis:
    container_name: app-redis
    hostname: develop-redis
    image: redis:7.0.12
    volumes:
      - ${REDIS_VOLUMES_DATA}:/data
      - ./redis/config/redis.conf:/etc/redis/redis.conf
    tty: true
    sysctls:
      - net.core.somaxconn=2048
    networks:
      - backend
    ports:
      - "6379:6379"
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
    command: redis-server /etc/redis/redis.conf --requirepass root
    restart: always
  pgsql:
    image: postgres:latest
    container_name: app-pgsql
    hostname: develop-pgsql
    user: "1000:1000"
    ports:
      - "5432:5432"
    volumes:
      - ${PGSQL_VOLUMES_DATA}:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=local_access
      - TZ=Asia/Shanghai
#      - DATABASE_ALREADY_EXISTS=false # 第一次启动时 需要创建数据库 故而设置为 false 之后启动则需要设置为 true
    restart: always
    networks:
      - backend
  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: app-clickhouse
    hostname: develop-clickhouse
    ports:
      - "8123:8123"
    volumes:
      - ${CLICKHOUSE_VOLUMES_DATA}:/var/lib/clickhouse/
      - ./clickhouse/users/:/etc/clickhouse-server/users.d/
    environment:
      - TZ=Asia/Shanghai
    restart: always
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "1"
    networks:
      - backend
networks:
  backend:
    driver: bridge